trigger:
  - master

variables:
  rootFolder: $(System.DefaultWorkingDirectory)
  vmImageName: 'Ubuntu 16.04'

stages:
  - stage: Build
    displayName: 'Build'
    variables:
      phpVersion: '7.4'
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              sudo update-alternatives --set php /usr/bin/php$(phpVersion)
              sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
              sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
              sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
              sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
              php -version
            workingDirectory: $(rootFolder)
            displayName: 'Use PHP version $(phpVersion)'

          - script: composer install --no-interaction --prefer-dist
            workingDirectory: $(rootFolder)
            displayName: 'Composer install'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(rootFolder)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/azure-devops-php.zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/azure-devops-php.zip
            displayName: 'Upload package'
            artifact: drop

  - stage: Development
    displayName: 'Deploy to Development environment'
    condition: succeeded()
    dependsOn: Build
    jobs:
      - template: azure-pipelines-development.yml
        parameters:
          environment: 'Development'

  - stage: Production
    displayName: 'Deploy to Production environment'
    condition: succeeded()
    dependsOn: Build
    jobs:
      - template: azure-pipelines-production.yml
        parameters:
          environment: 'Production'